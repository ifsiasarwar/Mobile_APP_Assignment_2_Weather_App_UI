import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: Container(
          decoration: const BoxDecoration(
            gradient: LinearGradient(
              begin: Alignment.topCenter,
              end: Alignment.bottomCenter,
              colors: [
                Color.fromARGB(255, 110, 52, 131),
                Color.fromARGB(255, 192, 106, 214),
              ],
            ),
          ),
          child: const WeatherPage(),
        ),
      ),
    );
  }
}

// The main page that contains all the weather UI components.
class WeatherPage extends StatelessWidget {
  const WeatherPage({super.key});

  @override
  Widget build(BuildContext context) {
    return const Column(
      crossAxisAlignment: CrossAxisAlignment.center,
      children: [
        SizedBox(height: 50),
        // Top section with location and date
        Text(
          'Dhaka, Bangladesh',
          style: TextStyle(
            fontSize: 24,
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
        SizedBox(height: 5),
        Text(
          'Monday, August 16',
          style: TextStyle(
            fontSize: 16,
            color: Colors.white,
          ),
        ),
        SizedBox(height: 20),
        // Middle section with current temperature and weather icon
        CurrentWeather(),
        SizedBox(height: 12),
        Text(
          'Partly Cloudy',
          style: TextStyle(
            fontSize: 20,
            color: Colors.white,
          ),
        ),
        SizedBox(height: 30),
        // Bottom section with daily forecast list
        Expanded(
          child: DailyForecastList(),
        ),
      ],
    );
  }
}

// A widget to display the current temperature and icon.
class CurrentWeather extends StatelessWidget {
  const CurrentWeather({super.key});

  @override
  Widget build(BuildContext context) {
    return Stack(
      alignment: Alignment.center,
      children: [
        // This is a placeholder for your asset image.
        // Make sure to add 'assets/cloud.png' to your project
        // and update pubspec.yaml.
        Icon(
          Icons.cloud,
          color: Colors.white,
          size: 200,
        ),
        const Text(
          '72°F',
          style: TextStyle(
            fontSize: 80,
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
      ],
    );
  }
}

// A widget that contains the list of daily forecast items.
class DailyForecastList extends StatelessWidget {
  const DailyForecastList({super.key});

  @override
  Widget build(BuildContext context) {
    return ListView(
      children: const [
        DailyForecastItem(day: 'Tue', icon: Icons.wb_sunny, highTemp: '75°', lowTemp: '68°'),
        DailyForecastItem(day: 'Wed', icon: Icons.cloud, highTemp: '70°', lowTemp: '65°'),
        DailyForecastItem(day: 'Thu', icon: Icons.cloud_queue, highTemp: '68°', lowTemp: '60°'),
        DailyForecastItem(day: 'Fri', icon: Icons.grain, highTemp: '65°', lowTemp: '58°'),
      ],
    );
  }
}

// A widget to display a single day's forecast.
class DailyForecastItem extends StatelessWidget {
  final String day;
  final IconData icon;
  final String highTemp;
  final String lowTemp;

  const DailyForecastItem({
    super.key,
    required this.day,
    required this.icon,
    required this.highTemp,
    required this.lowTemp,
  });

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 20.0, vertical: 10.0),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(day, style: const TextStyle(color: Colors.white, fontSize: 16)),
          Icon(icon, color: Colors.white),
          Row(
            children: [
              Text(highTemp, style: const TextStyle(color: Colors.white, fontSize: 16)),
              const SizedBox(width: 5),
              Text(lowTemp, style: const TextStyle(color: Colors.white54, fontSize: 16)),
            ],
          ),
        ],
      ),
    );
  }
}
